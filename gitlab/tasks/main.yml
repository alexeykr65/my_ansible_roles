---
# tasks file for gitlab
- name: GITLAB=>> upgrade all packages
  dnf:
    name: '*'
    state: latest    
- name: GITLAB=>> Add some packages
  dnf:
    name: [ chrony, wget, curl, policycoreutils, postfix]
    state: present
# - name: Gather the rpm package facts
#   package_facts:
#     manager: auto
# - name: Check whether a package called java-1.8.0-openjdk-devel is installed
#   debug:
#     msg: "{{ ansible_facts.packages['java-1.8.0-openjdk-devel'][0].version }} versions of openjdk are installed!"
#   when: "'java-1.8.0-openjdk-devel' in ansible_facts.packages"
    
- name: GITLAB=>> populate service facts
  service_facts:
# - debug:
#     msg: "{{ ansible_facts.services }}"
- name: GITLAB=>> Run postfix service
  systemd:
    state: started
    name: "{{ item }}"
    enabled: yes
  when: item in ansible_facts.services
  with_items:
    - "postfix.service"
- name: GITLAB=>> Run gitlab-ce script
  shell: "curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash"
  args:
    warn: no
- name: GITLAB=>> Make sure a some service is stoped
  systemd:
    state: stopped
    name: "{{ item }}"
    enabled: no
  when: item in ansible_facts.services
  with_items:
    - "firewalld.service"
- name: "GITLAB=>> Install GitLab package "
  dnf:
    name: "gitlab-ce"
    state: present
- name: GITLAB=>> Change url to gitlab.lanhome.org in file /etc/gitlab/gitlab.rb
  lineinfile:
    path: /etc/gitlab/gitlab.rb
    regexp: '{{item.From}}'
    line: '{{item.To}}'
    state: present  
  with_items:
    - { From: "^external_url 'http://gitlab.example.com'", To: "external_url 'http://gitlab.lanhome.org'"}
- name: GITLAB=>> Run configure gitlab 
  shell: "gitlab-ctl reconfigure"
  register: res_net
- name: GITLAB=>> Show ulr gitlab
  debug:
    msg: "url address: http://{{ ansible_ssh_host }}"
      


    # - name: GITLAB=>> Download jenkins.repo from http://pkg.jenkins.io/redhat-stable/jenkins.repo
    #   get_url:
    #     url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
    #     dest: /etc/yum.repos.d/jenkins.repo
    #     mode: '0644'

    # - name: GITLAB=>> Make sure a some service is stoped
    #   systemd:
    #     state: stopped
    #     name: "{{ item }}"
    #     enabled: no
    #   when: item in ansible_facts.services
    #   with_items:
    #     - "firewalld.service"

    # - name: GITLAB=>> Import jenkins repo key
    #   rpm_key:
    #     state: present
    #     key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key


    # - name: "GITLAB=>> Install jenkins package "
    #   dnf:
    #     name: "jenkins"
    #     state: present
    #     update_cache: yes

     
    # - name: GITLAB=>> Make sure the some services is running
    #   systemd:
    #     state: started
    #     enabled: yes
    #     name: "{{ item }}"
    #   with_items:
    #     - "jenkins"
    #     - "chronyd"

    # - name: GITLAB=>> Populate service facts
    #   service_facts:

    # - name: GITLAB=>> Show status service jenkins
    #   debug:
    #     msg: "{{ ansible_facts.services['jenkins.service'] }}"


    # # - name: Reboot
    # #   reboot:

    # # - name: GITLAB=>> Run netstat for check port 
    # #   shell: "netstat -lntup | grep java"
    # #   retries: 5
    # #   delay: 15
    # #   register: res_net

    # # - name: GITLAB=>> Show netstat jenkins
    # #   debug:
    # #     msg: "{{ res_net.stdout }}"
    # - name: Wait until the file initialAdminPassword is present
    #   wait_for:
    #     path: /var/lib/jenkins/secrets/initialAdminPassword
    #     timeout: 300
    #     delay: 10

    # - name: GITLAB=>> Cat admin password /var/lib/jenkins/secrets/initialAdminPassword
    #   shell: "cat /var/lib/jenkins/secrets/initialAdminPassword"
    #   retries: 5
    #   delay: 15
    #   register: res_net

    # - name: GITLAB=>> Show admin password jenkins
    #   debug:
    #     msg: "{{ res_net.stdout }} \nurl address: http://{{ ansible_ssh_host }}:8080"


